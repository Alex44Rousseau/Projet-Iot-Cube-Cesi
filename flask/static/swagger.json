{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger meteostore - OpenAPI 3.0",
    "description": "This is a sample meteo Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the meteo store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n_If you're looking for the Swagger 2.0/OAS 2.0 version of meteostore, then click [here](https://editor.swagger.io/?url=https://meteostore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load meteostore OAS 2.0` menu option!_\n\nSome useful links:\n- [The meteo Store repository](https://github.com/swagger-api/swagger-meteostore)\n- [The source API definition for the meteo Store](https://github.com/swagger-api/swagger-meteostore/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://localhost:8000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "meteo",
      "description": "Everything about meteo data",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://github.com/Khannasucre/cesi-cubes-iot"
      }
    }
  ],
  "paths": {
    "/meteo": {
      "post": {
        "tags": [
          "meteo"
        ],
        "summary": "Add a new meteo data",
        "description": "Add a new meteo data",
        "operationId": "addmeteo",
        "requestBody": {
          "description": "Create a new meteo data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/meteo"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/meteo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/meteo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/meteo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/meteo"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/meteo/": {
      "get": {
        "tags": [
          "meteo"
        ],
        "summary": "Get all data",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findmeteosByStatus",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/meteo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/meteo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/meteo/{meteoId}": {
      "get": {
        "tags": [
          "meteo"
        ],
        "summary": "Find meteo by ID",
        "description": "Returns a single meteo",
        "operationId": "getmeteoById",
        "parameters": [
          {
            "name": "meteoId",
            "in": "path",
            "description": "ID of meteo to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/meteo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/meteo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "meteo not found"
          }
        }
      },
      "delete": {
        "tags": [
          "meteo"
        ],
        "summary": "Deletes a meteo",
        "description": "delete a meteo",
        "operationId": "deletemeteo",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meteoId",
            "in": "path",
            "description": "meteo id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid meteo value"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "meteo": {
        "required": [
          "temperature",
          "pressure"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "temperature": {
            "type": "number",
            "example": 10.5
          },
          "pressure": {
            "type": "number",
            "example": 10.5
          },
          "humidity": {
            "type": "number",
            "example": 67
          }
        }
      }
    }
  }
}